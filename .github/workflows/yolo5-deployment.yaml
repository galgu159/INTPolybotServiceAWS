name: Yolo5 Microservice Deployment

on:
  push:
    paths:
      - 'yolo5/**'
    branches:
      - main

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo code
        uses: actions/checkout@v2

      - name: Build and push image
        run: |
          cd yolo5
          docker build -t yolo5:latest .
          docker tag yolo5:latest ${{ secrets.DOCKER_HUB_USERNAME }}/yolo5:latest
          echo ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/yolo5:latest

  Deploy:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: Update Launch Template and Refresh ASG
        run: |
          # Create a new launch template version
          aws ec2 create-launch-template-version --launch-template-id ${{ secrets.LAUNCH_TEMPLATE_ID }} --source-version ${{ secrets.LAUNCH_TEMPLATE_VERSION }} --launch-template-data '{"UserData":"#!/bin/bash\nsudo docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/yolo5:latest\nsudo docker stop yolo5_container || true\nsudo docker rm yolo5_container || true\nsudo docker run -d --name yolo5_container -p 8443:8443 ${{ secrets.DOCKER_HUB_USERNAME }}/yolo5:latest"}'
          
          # Get the new version number
          NEW_VERSION=$(aws ec2 describe-launch-template-versions --launch-template-id ${{ secrets.LAUNCH_TEMPLATE_ID }} --query "LaunchTemplateVersions[-1].VersionNumber" --output text)
          
          # Set the new version as the default
          aws ec2 modify-launch-template --launch-template-id ${{ secrets.LAUNCH_TEMPLATE_ID }} --default-version $NEW_VERSION
          
          # Start an instance refresh for the Auto Scaling Group
          aws autoscaling start-instance-refresh --auto-scaling-group-name ${{ secrets.ASG_NAME }}
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}